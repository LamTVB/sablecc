/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.objectmacro.codegeneration.java.macro;

import java.util.*;

public class MMacroBuilder {

  private final List<Object> ePublic = new LinkedList<Object>();
  private final List<Object> eContextParam = new LinkedList<Object>();
  private final List<Object> eContextExpansion = new LinkedList<Object>();
  private final List<Object> eStringPart_ParamInsertPart_EolPart_InsertMacroPart = new LinkedList<Object>();
  private final List<Object> eNewContextExpansion = new LinkedList<Object>();

  public MMacroBuilder() {
  }

  public MPublic newPublic() {
    MPublic lPublic = new MPublic();
    this.ePublic.add(lPublic);
    return lPublic;
  }

  public MContextParam newContextParam() {
    MContextParam lContextParam = new MContextParam();
    this.eContextParam.add(lContextParam);
    return lContextParam;
  }

  public MContextExpansion newContextExpansion() {
    MContextExpansion lContextExpansion = new MContextExpansion();
    this.eContextExpansion.add(lContextExpansion);
    return lContextExpansion;
  }

  public MStringPart newStringPart(String pString, String pIndexBuilder) {
    MStringPart lStringPart = new MStringPart(pString, pIndexBuilder);
    this.eStringPart_ParamInsertPart_EolPart_InsertMacroPart.add(lStringPart);
    return lStringPart;
  }

  public MParamInsertPart newParamInsertPart(String pParamName, String pIndexBuilder) {
    MParamInsertPart lParamInsertPart = new MParamInsertPart(pParamName, pIndexBuilder);
    this.eStringPart_ParamInsertPart_EolPart_InsertMacroPart.add(lParamInsertPart);
    return lParamInsertPart;
  }

  public MEolPart newEolPart(String pIndexBuilder) {
    MEolPart lEolPart = new MEolPart(pIndexBuilder);
    this.eStringPart_ParamInsertPart_EolPart_InsertMacroPart.add(lEolPart);
    return lEolPart;
  }

  public MInsertMacroPart newInsertMacroPart(String pName, String pIndexBuilder, String pIndexInsert) {
    MInsertMacroPart lInsertMacroPart = new MInsertMacroPart(pName, pIndexBuilder, pIndexInsert);
    this.eStringPart_ParamInsertPart_EolPart_InsertMacroPart.add(lInsertMacroPart);
    return lInsertMacroPart;
  }

  public MNewContextExpansion newNewContextExpansion() {
    MNewContextExpansion lNewContextExpansion = new MNewContextExpansion();
    this.eNewContextExpansion.add(lNewContextExpansion);
    return lNewContextExpansion;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("    @Override");
    sb.append(System.getProperty("line.separator"));
    sb.append("    ");
    for(Object oPublic : this.ePublic) {
      sb.append(oPublic.toString());
    }
    sb.append(" String build(");
    for(Object oContextParam : this.eContextParam) {
      sb.append(oContextParam.toString());
    }
    sb.append("){");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("        String local_expansion = ");
    if(this.eContextExpansion.size() == 0) {
      sb.append("this.expansion");
    }
    for(Object oContextExpansion : this.eContextExpansion) {
      sb.append(oContextExpansion.toString());
    }
    sb.append(";");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("        if(local_expansion != null){");
    sb.append(System.getProperty("line.separator"));
    sb.append("            return local_expansion;");
    sb.append(System.getProperty("line.separator"));
    sb.append("        }");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("        StringBuilder sb0 = new StringBuilder();");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    for(Object oStringPart_ParamInsertPart_EolPart_InsertMacroPart : this.eStringPart_ParamInsertPart_EolPart_InsertMacroPart) {
      sb.append(oStringPart_ParamInsertPart_EolPart_InsertMacroPart.toString());
    }
    sb.append(System.getProperty("line.separator"));
    sb.append("        local_expansion = sb0.toString();");
    sb.append(System.getProperty("line.separator"));
    sb.append("        ");
    if(this.eNewContextExpansion.size() == 0) {
      sb.append("this.expansion = local_expansion");
    }
    for(Object oNewContextExpansion : this.eNewContextExpansion) {
      sb.append(oNewContextExpansion.toString());
    }
    sb.append(";");
    sb.append(System.getProperty("line.separator"));
    sb.append("        return local_expansion;");
    sb.append(System.getProperty("line.separator"));
    sb.append("    }");
    sb.append(System.getProperty("line.separator"));
    return sb.toString();
  }

}
