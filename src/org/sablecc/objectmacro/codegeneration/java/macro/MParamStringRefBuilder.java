/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.objectmacro.codegeneration.java.macro;

import java.util.*;

public  class MParamStringRefBuilder extends Macro{
    
    String field_Name;
    
    MParamStringRefBuilder(String pName, Macros macros){
        
        
        this.setMacros(macros);
        this.setPName(pName);
    }
    
    private void setPName( String pName ){
        if(pName == null){
            throw ObjectMacroException.parameterNull("Name");
        }
    
        this.field_Name = pName;
    }
    
    String buildName(){
    
        return this.field_Name;
    }
    
    String getName(){
    
        return this.field_Name;
    }
    
    
    @Override
    void apply(
            InternalsInitializer internalsInitializer){
    
        internalsInitializer.setParamStringRefBuilder(this);
    }
    
    
    public String build(){
    
        CacheBuilder cache_builder = this.cacheBuilder;
    
        if(cache_builder == null){
            cache_builder = new CacheBuilder();
        }
        else if(cache_builder.getExpansion() == null){
            throw new InternalException("Cycle detection detected lately");
        }
        else{
            return cache_builder.getExpansion();
        }
        this.cacheBuilder = cache_builder;
        List<String> indentations = new LinkedList<>();
        StringBuilder sbIndentation = new StringBuilder();
    
        
    
    
    
        StringBuilder sb0 = new StringBuilder();
    
        sb0.append("private String build");
        sb0.append(buildName());
        sb0.append("() ");
        sb0.append("{");
        sb0.append(LINE_SEPARATOR);
        sb0.append("    StringBuilder sb = new StringBuilder();");
        sb0.append(LINE_SEPARATOR);
        sb0.append("    List<String> strings = this.list_");
        sb0.append(buildName());
        sb0.append(";");
        sb0.append(LINE_SEPARATOR);
        sb0.append(LINE_SEPARATOR);
        sb0.append("    int i = 0;");
        sb0.append(LINE_SEPARATOR);
        sb0.append("    int nb_strings = strings.size();");
        sb0.append(LINE_SEPARATOR);
        sb0.append(LINE_SEPARATOR);
        sb0.append("    if(this.");
        sb0.append(buildName());
        sb0.append("None != null) ");
        sb0.append("{");
        sb0.append(LINE_SEPARATOR);
        sb0.append("        sb.append(this.");
        sb0.append(buildName());
        sb0.append("None.apply(i, \"\", nb_strings));");
        sb0.append(LINE_SEPARATOR);
        sb0.append("    }");
        sb0.append(LINE_SEPARATOR);
        sb0.append(LINE_SEPARATOR);
        sb0.append("    for(String string : strings) ");
        sb0.append("{");
        sb0.append(LINE_SEPARATOR);
        sb0.append(LINE_SEPARATOR);
        sb0.append("        if(this.");
        sb0.append(buildName());
        sb0.append("BeforeFirst != null) ");
        sb0.append("{");
        sb0.append(LINE_SEPARATOR);
        sb0.append("            string = this.");
        sb0.append(buildName());
        sb0.append("BeforeFirst.apply(i, string, nb_strings);");
        sb0.append(LINE_SEPARATOR);
        sb0.append("        }");
        sb0.append(LINE_SEPARATOR);
        sb0.append(LINE_SEPARATOR);
        sb0.append("        if(this.");
        sb0.append(buildName());
        sb0.append("AfterLast != null) ");
        sb0.append("{");
        sb0.append(LINE_SEPARATOR);
        sb0.append("            string = this.");
        sb0.append(buildName());
        sb0.append("AfterLast.apply(i, string, nb_strings);");
        sb0.append(LINE_SEPARATOR);
        sb0.append("        }");
        sb0.append(LINE_SEPARATOR);
        sb0.append(LINE_SEPARATOR);
        sb0.append("        if(this.");
        sb0.append(buildName());
        sb0.append("Separator != null) ");
        sb0.append("{");
        sb0.append(LINE_SEPARATOR);
        sb0.append("            string = this.");
        sb0.append(buildName());
        sb0.append("Separator.apply(i, string, nb_strings);");
        sb0.append(LINE_SEPARATOR);
        sb0.append("        }");
        sb0.append(LINE_SEPARATOR);
        sb0.append(LINE_SEPARATOR);
        sb0.append("        sb.append(string);");
        sb0.append(LINE_SEPARATOR);
        sb0.append("        i++;");
        sb0.append(LINE_SEPARATOR);
        sb0.append("    }");
        sb0.append(LINE_SEPARATOR);
        sb0.append(LINE_SEPARATOR);
        sb0.append("    return sb.toString();");
        sb0.append(LINE_SEPARATOR);
        sb0.append("}");
    
        cache_builder.setExpansion(sb0.toString());
        return sb0.toString();
    }
    
    @Override
    String build(Context context) {
        return build();
    }
    
    
    private void setMacros(Macros macros){
        if(macros == null){
            throw new InternalException("macros cannot be null");
        }
    
        this.macros = macros;
    }
}